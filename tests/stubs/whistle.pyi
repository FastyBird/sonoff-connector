from typing import Optional, Callable


class Event(object): ...

class EventDispatcher(object):
    def dispatch(self, event_id: str, event: Optional[Event] = None) -> None: ...

    def add_listener(self, event_id: str, listener: Callable[[Event], None], priority: int =0) -> None: ...

    def has_listeners(self, event_id: Optional[str] = None) -> bool: ...

    def remove_listener(self, event_id: str, listener: Callable[[Event], None]) -> None: ...
